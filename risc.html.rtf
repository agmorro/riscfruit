<!DOCTYPE html>\
<html lang="es">\
<head>\
  <meta charset="UTF-8">\
  <title>Modelo Teachable Machine</title>\
  <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs"></script>\
</head>\
<body>\
  <video id="video" width="320" height="240" autoplay playsinline></video>\
  <div id="predicciones"></div>\
  <script>\
    // funci\'f3n para cargar el modelo\
    async function cargarModelo() \{\
      // 'model.json' es la url donde est\'e1 alojado el json del modelo\
      const modelo = await tf.loadLayersModel('model.json');\
      return modelo;\
    \}\
\
    // funci\'f3n para activar la c\'e1mara trasera\
    async function iniciarVideo() \{\
      const video = document.getElementById('video');\
      try \{\
        const stream = await navigator.mediaDevices.getUserMedia(\{\
          video: \{ facingMode: \{ exact: "environment" \} \}\
        \});\
        video.srcObject = stream;\
        return new Promise(resolve => \{\
          video.onloadedmetadata = () => \{\
            video.play();\
            resolve(video);\
          \};\
        \});\
      \} catch (error) \{\
        console.error("error al acceder a la c\'e1mara: ", error);\
      \}\
    \}\
\
    // funci\'f3n para capturar un frame, preprocesarlo y hacer la predicci\'f3n\
    async function predecir(modelo, video) \{\
      // crea un tensor a partir de la imagen del video\
      const tensor = tf.browser.fromPixels(video)\
                         .resizeNearestNeighbor([224, 224])\
                         .toFloat()\
                         .expandDims();\
      // si fuera necesario, normaliza el tensor (ej. dividir entre 255)\
      const tensorNormalizado = tensor.div(255);\
      const pred = modelo.predict(tensorNormalizado);\
      pred.data().then(datos => \{\
        document.getElementById('predicciones').innerText = "predicci\'f3n: " + Array.from(datos);\
      \});\
      tensor.dispose();\
      tensorNormalizado.dispose();\
    \}\
\
    async function main() \{\
      const modelo = await cargarModelo();\
      const video = await iniciarVideo();\
      // se realiza una predicci\'f3n cada cierto intervalo\
      setInterval(() => \{\
        predecir(modelo, video);\
      \}, 500);\
    \}\
\
    main();\
  </script>\
</body>\
</html>}
